{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/TOCCustomToolbar.js","components/TOCEventDialog.js","components/TOCWidget.js","components/OrgWidget.js","components/TrainingWidget.js","components/NotificationWidget.js","pages/Home.js","pages/TOCFullscreen.js","components/OrgChartWidgetDialog.js","pages/OrgChartFullscreen.js","pages/TrainingFullscreen.js","pages/NotificationFullscreen.js","App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","NavMenu","props","classes","useEffect","darkState","AppBar","position","Toolbar","Switch","checked","onChange","changeTheme","Typography","variant","className","Button","NavLink","tag","Link","to","style","color","height","maxWidth","Layout","useState","setDarkState","palletType","darkTheme","createMuiTheme","palette","type","CssBaseline","Container","children","messages","date","time","event","allDay","week","work_week","day","month","previous","next","yesterday","tomorrow","today","agenda","noEventsInRange","showMore","total","TOCCustomToolbar","navigate","action","console","log","onNavigate","this","toolbar","ButtonGroup","onClick","navButtons","buttonText","toolBarLabel","label","viewNamesGroup","viewNames","views","view","length","map","name","key","bind","withStyles","toolBar","display","flexWrap","justifyContent","alignItems","marginBottom","padding","textAlign","background","borderColor","dialogPaper","width","TOCEventDialog","isOpen","eventObj","Dialog","open","onClose","setClosed","paper","DialogTitle","DialogContent","moment","start","format","end","DialogActions","localizer","momentLocalizer","cardHeader","cardContent","TOCWidget","React","currentTime","setCurrentTime","events","setEvents","isDialogOpen","setIsDialogOpen","dialogEventObj","setDialogEventObj","GetEvents","fetch","then","response","json","data","isStatic","components","Card","CardHeader","avatar","FormControl","component","IconButton","area-label","toggleStatic","CardContent","onSelectEvent","e","PanZoomChart","datasource","id","pan","zoom","containerClass","TrainingTable","originalRows","courseCode","courseTitle","statusText","courseDesc","availDate","content1","content2","a","rows","setRows","b","searched","setSearched","requestSearch","searchedVal","filteredRowsCode","filter","row","toLowerCase","includes","filteredRowsTitle","Set","value","searchVal","onCancelSearch","columns","field","headerName","pageSize","alert","margin","cardRoot","backgroundColor","tabs","borderRight","divider","message","NotificationWidget","notifications","setNotifications","isSnackbarOpen","setIsSnackbarOpen","snackbarText","setSnackbarText","snackbarSeverity","setSnackbarSeverity","getNotifications","sort","Date","dateFired","handleClose","reason","VerticalTabs","dismissNotification","window","location","url","URL","origin","params","JSON","stringify","search","URLSearchParams","res","ok","Error","catch","err","undoDismissal","Snackbar","autoHideDuration","Alert","severity","TabPanel","index","other","role","hidden","aria-labelledby","overflowY","Box","p","a11yProps","AlertContent","float","text","setValue","handleDismissal","Tabs","orientation","newValue","aria-label","Tab","item","status","size","fontSize","AlertTitle","category","Home","isTOCWidgetStatic","setIsTOCWidgetStatic","isOrgWidgetStatic","setIsOrgWidgetStatic","isTrainingWidgetStatic","setIsTrainingWidgetStatic","isNotificationWidgetStatic","setIsNotificationWidgetStatic","i","x","y","w","h","minW","static","layout","setLayout","toggleWidgetStatic","newLayout","l","cols","rowHeight","onLayoutChange","marginTop","TOCFullscreen","ds","OrgChartWidgetDialog","OrgChartFullscreen","orgs","setOrgs","Paper","onClickNode","TrainingFullscreen","NotificationFullscreen","App","exact","path","Component","displayName","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","process","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e56d817a.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function NavMenu(props) {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        //console.log(props.darkState);\r\n    }, [props.darkState]);\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Switch\r\n                    checked={props.darkState}\r\n                    onChange={props.changeTheme}\r\n                />\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Employee Oversight Portal\r\n                </Typography>\r\n                <Button >\r\n                    <NavLink tag={Link} to=\"/EOP\"><Typography variant=\"body1\" style={{color: \"white\"}}>Home</Typography></NavLink>\r\n                </Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport NavMenu from './NavMenu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: \"800px\",\r\n        maxWidth: \"1600px\"\r\n    }\r\n}));\r\n\r\nexport default function Layout(props) {\r\n\r\n    const [darkState, setDarkState] = useState(true);\r\n    const palletType = darkState ? \"dark\" : \"light\";\r\n\r\n    const classes = useStyles();\r\n\r\n    const darkTheme = createMuiTheme({\r\n        palette: {\r\n            type: palletType,\r\n        }\r\n    });\r\n\r\n    const handleThemeChange = () => {\r\n        setDarkState(!darkState);\r\n    };\r\n\r\n    return (\r\n        <MuiThemeProvider theme={darkTheme}>\r\n            <CssBaseline />\r\n            <NavMenu darkState={darkState} changeTheme={handleThemeChange}/>\r\n            <Container className={classes.root}>\r\n                {props.children}\r\n            </Container>\r\n        </MuiThemeProvider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Toolbar from 'react-big-calendar/lib/Toolbar';\r\nimport { AppBar, Button, ButtonGroup, Toolbar as MUIToolbar, Typography } from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nlet messages = {\r\n    date: 'Date',\r\n    time: 'Time',\r\n    event: 'Event',\r\n    allDay: 'All Day',\r\n    week: 'Week',\r\n    work_week: 'Work Week',\r\n    day: 'Day',\r\n    month: 'Month',\r\n    previous: 'Back',\r\n    next: 'Next',\r\n    yesterday: 'Yesterday',\r\n    tomorrow: 'Tomorrow',\r\n    today: 'Today',\r\n    agenda: 'Agenda',\r\n\r\n    noEventsInRange: 'There are no events in this range.',\r\n\r\n    showMore: total => `+${total} more`,\r\n}\r\n\r\nconst styles = theme => ({\r\n    toolBar: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginBottom: \"10px\"\r\n    },\r\n    toolBarLabel: {\r\n        flexGrow: 1,\r\n        padding: \"0 10px\",\r\n        textAlign: \"center\"\r\n    },\r\n    navButtons: {\r\n        background: 'radial-gradient(circle, rgba(242,234,7,1) 38%, rgba(230,211,11,1) 54%, rgba(245,240,6,1) 79%)',\r\n        borderColor: 'black'\r\n    },\r\n    buttonText: {\r\n        color: \"black\"\r\n    }\r\n});\r\n\r\nclass TOCCustomToolbar extends Toolbar {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <AppBar position=\"static\">\r\n                <MUIToolbar className={classes.toolbar}>\r\n                    <ButtonGroup>\r\n                        <Button type=\"button\" onClick={() => this.navigate('TODAY')} className={classes.navButtons}>\r\n                            <Typography variant=\"subtitle1\" className={classes.buttonText}>\r\n                                Today\r\n                            </Typography>\r\n                        </Button>\r\n                        <Button type=\"button\" onClick={() => this.navigate('PREV')} className={classes.navButtons}>\r\n                            <Typography variant=\"subtitle1\" className={classes.buttonText}>\r\n                                Prev\r\n                            </Typography>\r\n                        </Button>\r\n                        <Button type=\"button\" onClick={() => this.navigate('NEXT')} className={classes.navButtons}>\r\n                            <Typography variant=\"subtitle1\" className={classes.buttonText}>\r\n                                Next\r\n                            </Typography>\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                    <Typography className={classes.toolBarLabel}>{this.props.label}</Typography>\r\n                    <ButtonGroup className=\"rbc-btn-group\">{this.viewNamesGroup(messages)}</ButtonGroup>\r\n                 </MUIToolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n\r\n    viewNamesGroup(messages) {\r\n        let viewNames = this.props.views\r\n        const view = this.props.view\r\n        const { classes } = this.props;\r\n\r\n        if (viewNames.length > 1) {\r\n            return viewNames.map(name => (\r\n                <Button\r\n                    type=\"button\"\r\n                    key={name}\r\n                    className={classes.navButtons}\r\n                    onClick={this.view.bind(null, name)}\r\n                >\r\n                    <Typography variant=\"subtitle1\" className={classes.buttonText}>\r\n                        {messages[name]}\r\n                    </Typography>\r\n                </Button>\r\n            ))\r\n        }\r\n    }\r\n\r\n    navigate = action => {\r\n        console.log(action);\r\n\r\n        this.props.onNavigate(action)\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(TOCCustomToolbar);","import React, { useEffect } from 'react';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    dialogPaper: {\r\n        width: \"50%\",\r\n        height: \"35%\"\r\n    }\r\n}));\r\n\r\nexport default function TOCEventDialog(props) {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n\r\n    }, [props.isOpen, props.eventObj]);\r\n\r\n    return (\r\n        <Dialog open={props.isOpen} onClose={props.setClosed} classes={{ paper: classes.dialogPaper }}>\r\n            <DialogTitle>{props?.eventObj?.title}</DialogTitle>\r\n            <DialogContent>\r\n                Start Date: {moment(props?.eventObj?.start).format('M/D/YY h:mm A')} <br /><br />\r\n                End Date: {moment(props?.eventObj?.end).format('M/D/YY h:mm A')}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.setClosed}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonGroup, Card, CardContent, CardHeader, Dialog, FormControl, IconButton, Typography } from '@material-ui/core';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpen from '@material-ui/icons/LockOpen';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport '../css/react-big-calendar.css'\r\nimport TOCCustomToolbar from './TOCCustomToolbar';\r\nimport TOCEventDialog from './TOCEventDialog';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%'\r\n    },\r\n    cardHeader: {\r\n        height: '15%'\r\n    },\r\n    cardContent: {\r\n        height: '85%'\r\n    },\r\n    title: {\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function TOCWidget(props) {\r\n    const classes = useStyles();\r\n    const [currentTime, setCurrentTime] = React.useState(moment().format('h:mm A'));\r\n    const [events, setEvents] = React.useState([]);\r\n    const [isDialogOpen, setIsDialogOpen] = React.useState(false);\r\n    const [dialogEventObj, setDialogEventObj] = React.useState();\r\n\r\n    function GetEvents() {\r\n        fetch('./api/Dashboard/GetEvents')\r\n            .then(response => response.json())\r\n            .then(data => setEvents(data))\r\n            .then(setCurrentTime(moment().format('h:mm A')))\r\n    }\r\n\r\n    useEffect(() => {\r\n        //get events to populate calendar\r\n        GetEvents();\r\n    }, [props.isStatic]);\r\n\r\n    //const MyEvents = [\r\n    //    {\r\n    //        id: 0,                                      //ID\r\n    //        userId: \"j1023\",                            //USERID\r\n    //        title: \"j1023\" + \" - \" + \"Long Vacation\",   //EVENT_TITLE\r\n    //        start: new Date(2021, 3, 5),                //EVENT_START\r\n    //        end: new Date(2021, 3, 9),                  //EVENT_START\r\n    //    }\r\n    //];\r\n\r\n    const handleClickOpen = (e) => {\r\n        setDialogEventObj(e);\r\n        setIsDialogOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setIsDialogOpen(false);\r\n    };\r\n\r\n    let components = {\r\n        toolbar: TOCCustomToolbar\r\n    };\r\n\r\n    return (\r\n        <Card variant=\"outlined\" className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <FormControl component=\"fieldset\">\r\n                        <IconButton area-label=\"lock\" onClick={props.toggleStatic}>\r\n                            {(props.isStatic) ? <LockIcon /> : <LockOpen />}\r\n                        </IconButton>\r\n                    </FormControl>\r\n                }\r\n                action={\r\n                    <ButtonGroup>\r\n                        <IconButton area-label=\"fullscreen\">\r\n                            <Link to=\"/EOP/TOCFullscreen\"><FullscreenIcon /></Link>\r\n                        </IconButton>\r\n                        <IconButton area-label=\"sync\" onClick={GetEvents}>\r\n                            <SyncIcon />\r\n                            <Typography variant=\"caption\">As of<br />{currentTime}</Typography>\r\n                            <SyncIcon />\r\n                        </IconButton>\r\n                    </ButtonGroup>\r\n                }\r\n                title={\r\n                    <Typography variant=\"h6\" className={classes.title}>Time Off Calendar Widget</Typography>\r\n                }\r\n                className={classes.cardHeader}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <Calendar\r\n                    events={events}\r\n                    localizer={localizer}\r\n                    components={components}\r\n                    onSelectEvent={handleClickOpen}\r\n                />\r\n            </CardContent>\r\n            <TOCEventDialog isOpen={isDialogOpen} setClosed={handleClose} eventObj={dialogEventObj}/>\r\n        </Card>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport OrganizationChart from \"@dabeng/react-orgchart\";\r\nimport { Card, CardContent, CardHeader, Checkbox, FormControl, FormControlLabel, IconButton, Typography } from '@material-ui/core';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpen from '@material-ui/icons/LockOpen';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: \"100%\"\r\n    },\r\n    cardHeader: {\r\n        height: \"15%\"\r\n    },\r\n    cardContent: {\r\n        height: \"85%\"\r\n    },\r\n    title: {\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\nexport default function PanZoomChart(props){\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        //console.log(props.isStatic)\r\n    }, [props.isStatic]);\r\n\r\n    const ds = {\r\n        id: \"n1\", //userId\r\n        name: \"Tom Brown\", //fullname\r\n        title: \"general manager\", //org title\r\n        children: [ //members\r\n            { id: \"n2\", name: \"Lind Mill\", title: \"department manager\" },\r\n            {\r\n                id: \"n3\",\r\n                name: \"Cindy Simms\",\r\n                title: \"department manager\",\r\n                children: [\r\n                    { id: \"n4\", name: \"Tia Sunny\", title: \"senior engineer\" },\r\n                    {\r\n                        id: \"n5\",\r\n                        name: \"Kyle Kyleson\",\r\n                        title: \"senior engineer\",\r\n                        children: [\r\n                            { id: \"n6\", name: \"Dan Dan\", title: \"engineer\" },\r\n                            { id: \"n7\", name: \"Bob Bob\", title: \"engineer\" }\r\n                        ]\r\n                    },\r\n                    { id: \"n8\", name: \"Jeffer Jefferson\", title: \"senior engineer\" }\r\n                ]\r\n            },\r\n            { id: \"n9\", name: \"Billy Joel\", title: \"department manager\" },\r\n            {\r\n                id: \"n10\",\r\n                name: \"Sarah Williams\",\r\n                title: \"department manager\",\r\n                children: [{ id: \"n11\", name: \"Cristina\", title: \"senior engineer\" }]\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <Card variant=\"outlined\" className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <FormControl component=\"fieldset\">\r\n                        <IconButton area-label=\"lock\" onClick={props.toggleStatic}>\r\n                            {(props.isStatic) ? <LockIcon /> : <LockOpen />}\r\n                        </IconButton>\r\n                    </FormControl>\r\n                }\r\n                action={\r\n                    <IconButton area-label=\"fullscreen\">\r\n                        <Link to=\"/EOP/OrgChartFullscreen\"><FullscreenIcon /></Link>\r\n                    </IconButton>\r\n                }\r\n                title={\r\n                    <Typography variant=\"h6\" className={classes.title}>Org Chart Widget</Typography>\r\n                }\r\n                className={classes.cardHeader}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <OrganizationChart datasource={ds} pan={true} zoom={false} containerClass=\"orgChartCustomClass\"/>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardContent, CardHeader, FormControl, IconButton, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpen from '@material-ui/icons/LockOpen';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport SearchBar from \"material-ui-search-bar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: \"100%\"\r\n    },\r\n    cardHeader: {\r\n        height: \"15%\"\r\n    },\r\n    cardContent: {\r\n        height: \"80%\"\r\n    },\r\n    title: {\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\nexport default function TrainingTable(props) {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        //console.log(props.isStatic)\r\n    }, [props.isStatic]);\r\n\r\n    const handleNavClick = () => {\r\n        //window.open(\"/TrainingFullscreen\");\r\n        window.location.href = \"/EOP/TrainingFullscreen\";\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 70 },\r\n        { field: 'courseCode', headerName: 'Course Code', width: 130 },\r\n        { field: 'courseTitle', headerName: 'Course Title', width: 250 },\r\n        { field: 'statusText', headerName: 'Status Text', width: 130 },\r\n        { field: 'courseDesc', headerName: 'Course Description', width: 250 },\r\n        { field: 'availDate', headerName: 'Available Date', width: 150 },\r\n        { field: 'content1', headerName: 'Content 1', width: 130 },\r\n        { field: 'content2', headerName: 'Content 2', width: 130 }\r\n    ];\r\n\r\n    const originalRows = [\r\n        { id: '1', courseCode: 'CSCI590', courseTitle: 'Capstone', statusText: 'Active', courseDesc: 'Applying accumulated knowledge', availDate: 'January 11 2021', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '2', courseCode: 'ITS315', courseTitle: 'Introduction to Networks', statusText: 'Active', courseDesc: 'Networking fundamentals', availDate: 'January 11 2021', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '3', courseCode: 'ITS350', courseTitle: 'Information Systems & Security', statusText: 'Active', courseDesc: 'Network security basics', availDate: 'January 11 2021', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '4', courseCode: 'CSCI515', courseTitle: 'Ethical Hacking', statusText: 'Inactive', courseDesc: 'Network penetration testing', availDate: 'March 15 2021', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '5', courseCode: 'ITS455', courseTitle: 'Digital Forensics & Investigations', statusText: 'Inactive', courseDesc: 'Digital forensics', availDate: 'March 15 2021', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '6', courseCode: 'BADM345', courseTitle: 'Business Communication', statusText: 'Archive', courseDesc: 'Communication for business', availDate: 'August 20 2020', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '7', courseCode: 'COMM190', courseTitle: 'Introduction to Communication', statusText: 'Archive', courseDesc: 'Communication basics', availDate: 'August 20 2020', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '8', courseCode: 'CSCI411', courseTitle: 'Operating Systems', statusText: 'Archive', courseDesc: 'Windows & Linux system modeling', availDate: 'August 20 2020', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '9', courseCode: 'CSCI520', courseTitle: 'Database Systems Design', statusText: 'Archive', courseDesc: 'Intro to database concepts and SQL', availDate: 'August 20 2020', content1: 'asdf', content2: 'qwerty' },\r\n    ];\r\n\r\n    var a = useState(originalRows), rows = a[0], setRows = a[1];\r\n    var b = useState(\"\"), searched = b[0], setSearched = b[1];\r\n    var requestSearch = function (searchedVal) {\r\n        var filteredRowsCode = originalRows.filter(function (row) {\r\n            return row.courseCode.toLowerCase().includes(searchedVal.toLowerCase());\r\n        });\r\n        var filteredRowsTitle = originalRows.filter(function (row) {\r\n            return row.courseTitle.toLowerCase().includes(searchedVal.toLowerCase());\r\n        });\r\n        setRows([...new Set([...filteredRowsCode, ...filteredRowsTitle])]);\r\n    };\r\n    var cancelSearch = function () {\r\n        setSearched(\"\");\r\n        requestSearch(searched);\r\n    };\r\n\r\n    return (\r\n        <Card variant=\"outlined\" className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <FormControl component=\"fieldset\">\r\n                        <IconButton area-label=\"lock\" onClick={props.toggleStatic}>\r\n                            {(props.isStatic) ? <LockIcon /> : <LockOpen />}\r\n                        </IconButton>\r\n                    </FormControl>\r\n                }\r\n                action={\r\n                    <IconButton area-label=\"fullscreen\">\r\n                        <Link to=\"/EOP/TrainingFullscreen\"><FullscreenIcon /></Link>\r\n                    </IconButton>\r\n                }\r\n                title={\r\n                    <Typography variant=\"h6\" className={classes.title}>Training Widget</Typography>\r\n                }\r\n                className={classes.cardHeader}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <SearchBar\r\n                    value={searched}\r\n                    onChange={(searchVal) => requestSearch(searchVal)}\r\n                    onCancelSearch={() => cancelSearch()}\r\n                />\r\n                <DataGrid rows={rows} columns={columns} pageSize={5} />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, ButtonGroup, Card, CardContent, CardHeader, FormControl, IconButton, Snackbar, Tab, Tabs, Typography } from '@material-ui/core';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport LockOpen from '@material-ui/icons/LockOpen';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport moment from 'moment';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    alert: {\r\n        margin: '5px'\r\n    },\r\n    cardRoot: {\r\n        height: '100%'\r\n    },\r\n    cardHeader: {\r\n        height: '15%'\r\n    },\r\n    cardContent: {\r\n        height: '85%'\r\n    },\r\n    title: {\r\n        textAlign: \"center\"\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n        height: '100%',\r\n    },\r\n    tabs: {\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    message: {\r\n        padding: '8px 0',\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport default function NotificationWidget(props) {\r\n    const classes = useStyles();\r\n    const [currentTime, setCurrentTime] = React.useState();\r\n    const [notifications, setNotifications] = React.useState([]);\r\n\r\n    const [isSnackbarOpen, setIsSnackbarOpen] = React.useState(false);\r\n    const [snackbarText, setSnackbarText] = React.useState(\"\");\r\n    const [snackbarSeverity, setSnackbarSeverity] = React.useState(\"\");\r\n\r\n    //get notifciations fetch requests placed in function as it is called multiple times\r\n    function getNotifications() {\r\n        fetch('./api/Dashboard/GetNotifications')\r\n            .then(response => response.json())\r\n            .then(data => setNotifications(data.sort(function (a, b) {\r\n                //oldest at the top, newest at the bottom\r\n                return new Date(a.dateFired) - new Date(b.dateFired);\r\n            })))\r\n            .then(setCurrentTime(moment().format('h:mm A')))\r\n    }\r\n\r\n    useEffect(() => {\r\n        //get notifications to populate widget\r\n        getNotifications();\r\n\r\n        //set timer to refresh notifications\r\n    }, [props.isStatic]);\r\n\r\n    const handleNavClick = () => {\r\n        window.location.href = \"/EOP/NotificationFullscreen\";\r\n    }\r\n\r\n    const handleDismissal = (key) => {\r\n        //fetch request to change notification status to dismissed\r\n        console.log(window.location);\r\n        const url = new URL(window.location.origin + \"/api/Dashboard/SetDismissed\");\r\n        const params = { id: JSON.stringify(key) };\r\n        url.search = new URLSearchParams(params);\r\n        fetch(url)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    setSnackbarSeverity(\"success\");\r\n                    setSnackbarText(\"Notification dismissed!\");\r\n                    setIsSnackbarOpen(true);\r\n\r\n                    //retrieve latest notifications\r\n                    getNotifications();\r\n                }\r\n                else\r\n                    throw new Error(\"error\");\r\n            })\r\n            .catch(err => {\r\n                setSnackbarSeverity(\"error\");\r\n                setSnackbarText(\"Server Error... Please try again or refresh the widget\");\r\n                setIsSnackbarOpen(true);\r\n            })\r\n    }\r\n\r\n    //undo in this context means setting status of notification back to active\r\n    const handleUndo = (key) => {\r\n        //fetch request to change notification status to active\r\n        console.log(window.location);\r\n        const url = new URL(window.location.origin + \"/api/Dashboard/SetActive\");\r\n        const params = { id: JSON.stringify(key) };\r\n        url.search = new URLSearchParams(params);\r\n        fetch(url)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    setSnackbarSeverity(\"info\");\r\n                    setSnackbarText(\"Notification re-activated!\");\r\n                    setIsSnackbarOpen(true);\r\n\r\n                    //retrieve latest notifications\r\n                    getNotifications();\r\n                }\r\n                else\r\n                    throw new Error(\"error\");\r\n            })\r\n            .catch(err => {\r\n                setSnackbarSeverity(\"error\");\r\n                setSnackbarText(\"Server Error... Please try again or refresh the widget\");\r\n                setIsSnackbarOpen(true);\r\n            })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setIsSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Card variant=\"outlined\" className={classes.cardRoot}>\r\n            <CardHeader\r\n                avatar={\r\n                    <FormControl component=\"fieldset\">\r\n                        <IconButton area-label=\"lock\" onClick={props.toggleStatic}>\r\n                            {(props.isStatic) ? <LockIcon /> : <LockOpen />}\r\n                        </IconButton>\r\n                    </FormControl>\r\n                }\r\n                action={\r\n                    <ButtonGroup>\r\n                        <IconButton area-label=\"fullscreen\">\r\n                            <Link to=\"/EOP/NotificationFullscreen\"><FullscreenIcon /></Link>\r\n                        </IconButton>\r\n                        <IconButton area-label=\"sync\" onClick={getNotifications}>\r\n                            <SyncIcon />\r\n                            <Typography variant=\"caption\">As of<br />{currentTime}</Typography>\r\n                            <SyncIcon />\r\n                        </IconButton>\r\n                    </ButtonGroup>\r\n                }\r\n                title={\r\n                    <Typography variant=\"h6\" className={classes.title}>Notifications</Typography>\r\n                }\r\n                className={classes.cardHeader}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <VerticalTabs notifications={notifications} dismissNotification={handleDismissal} undoDismissal={handleUndo} />\r\n                <Snackbar open={isSnackbarOpen} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity={snackbarSeverity} variant=\"filled\">\r\n                        {snackbarText}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            style={{ width: \"100%\", overflowY: \"auto\" }}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction AlertContent(props) {\r\n    return (\r\n        <div>\r\n            <p style={{ float: \"left\" }}>{props.text}</p>\r\n            <p style={{ float: \"right\" }}><i>{moment(props.dateFired).format('M/D/YY h:mm A')}</i></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction VerticalTabs(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [props.notifications]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleDismissal = (key) => {\r\n        props.dismissNotification(key);\r\n    }\r\n\r\n    const handleUndo = (key) => {\r\n        props.undoDismissal(key);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"Vertical tabs example\"\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Overview\" {...a11yProps(0)} />\r\n                <Tab label=\"TOC Calendar\" {...a11yProps(1)} />\r\n                <Tab label=\"Custom\" {...a11yProps(2)} />\r\n                <Tab label=\"History\" {...a11yProps(3)} />\r\n            </Tabs>\r\n            <TabPanel value={value} index={0}>\r\n                {props.notifications.map((item) => {\r\n                    if (item.status !== \"dismissed\")\r\n                        return (\r\n                            <Alert\r\n                                action={\r\n                                    <IconButton\r\n                                        aria-label=\"close\"\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            handleDismissal(item.id);\r\n                                        }}\r\n                                    >\r\n                                        <CloseIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                }\r\n                                severity=\"info\" className={classes.alert} key={item.id} classes={{ message: classes.message }}>\r\n                                <AlertTitle>{item.title}</AlertTitle>\r\n                                <AlertContent text={item.text} dateFired={item.dateFired} />\r\n                            </Alert>\r\n                        );\r\n                })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                {props.notifications.map((item) => {\r\n                    if (item.category === \"toc\" && item.status !== \"dismissed\")\r\n                        return (\r\n                            <Alert\r\n                                action={\r\n                                    <IconButton\r\n                                        aria-label=\"close\"\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            handleDismissal(item.id);\r\n                                        }}\r\n                                    >\r\n                                        <CloseIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                }\r\n                                severity=\"info\" className={classes.alert} key={item.id} classes={{ message: classes.message }}>\r\n                                <AlertTitle>{item.title}</AlertTitle>\r\n                                <AlertContent text={item.text} dateFired={item.dateFired} />\r\n                            </Alert>\r\n                        );\r\n                })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                {props.notifications.map((item) => {\r\n                    if (item.category === \"custom\" && item.status !== \"dismissed\")\r\n                        return (\r\n                            <Alert\r\n                                action={\r\n                                    <IconButton\r\n                                        aria-label=\"close\"\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            handleDismissal(item.id);\r\n                                        }}\r\n                                    >\r\n                                        <CloseIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                }\r\n                                severity=\"info\" className={classes.alert} key={item.id} classes={{ message: classes.message }}>\r\n                                <AlertTitle>{item.title}</AlertTitle>\r\n                                <AlertContent text={item.text} dateFired={item.dateFired} />\r\n                            </Alert>\r\n                        );\r\n                })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3}>\r\n                {props.notifications.map((item) => {\r\n                    if (item.status === \"dismissed\")\r\n                        return (\r\n                            <Alert\r\n                                action={\r\n                                    <IconButton\r\n                                        aria-label=\"close\"\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            handleUndo(item.id);\r\n                                        }}\r\n                                    >\r\n                                        <RedoIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                }\r\n                                severity=\"success\" className={classes.alert} key={item.id} classes={{ message: classes.message }}>\r\n                                <AlertTitle>{item.title}</AlertTitle>\r\n                                <AlertContent text={item.text} dateFired={item.dateFired} />\r\n                            </Alert>\r\n                        );\r\n                })}\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport GridLayout from 'react-grid-layout';\r\nimport TOCWidget from '../components/TOCWidget';\r\nimport OrgWidget from '../components/OrgWidget';\r\nimport TrainingWidget from '../components/TrainingWidget';\r\nimport NotificationWidget from '../components/NotificationWidget';\r\nimport \"../css/styles.css\";\r\n\r\nexport default function Home() {\r\n\r\n    const [isTOCWidgetStatic, setIsTOCWidgetStatic] = useState(true);\r\n    const [isOrgWidgetStatic, setIsOrgWidgetStatic] = useState(true);\r\n    const [isTrainingWidgetStatic, setIsTrainingWidgetStatic] = useState(true);\r\n    const [isNotificationWidgetStatic, setIsNotificationWidgetStatic] = useState(true);\r\n\r\n    const [layout, setLayout] = useState([\r\n        { i: 'a', x: 0, y: 9, w: 8, h: 14, minW: 8, static: true },\r\n        { i: 'b', x: 8, y: 9, w: 8, h: 14, minW: 8, static: true },\r\n        { i: 'c', x: 0, y: 0, w: 16, h: 9, minW: 8, static: true },\r\n        { i: 'd', x: 8, y: 23, w: 8, h: 14, minW: 8, static: true }\r\n    ]);\r\n\r\n    function toggleWidgetStatic(layout, key) {\r\n        console.log(\"set \" + key + \" to static\");\r\n        var newLayout = layout.map(l => {\r\n            return { ...l, static: (l.i === key) ? !l.static : l.static }\r\n        });\r\n\r\n        switch (key) {\r\n            case \"a\":\r\n                setIsTOCWidgetStatic(!isTOCWidgetStatic);\r\n                break;\r\n            case \"b\":\r\n                setIsOrgWidgetStatic(!isOrgWidgetStatic);\r\n                break;\r\n            case \"c\":\r\n                setIsNotificationWidgetStatic(!isNotificationWidgetStatic);\r\n                break;\r\n            case \"d\":\r\n                setIsTrainingWidgetStatic(!isTrainingWidgetStatic);\r\n            default:\r\n        }\r\n\r\n        setLayout(newLayout);\r\n    };\r\n\r\n    function handleLayoutChange(layout) {\r\n        setLayout(layout);\r\n    };\r\n\r\n    return (\r\n        <GridLayout className=\"layout\" layout={layout} cols={16} rowHeight={30} width={1600} onLayoutChange={handleLayoutChange}>\r\n            <div key=\"a\">\r\n                <TOCWidget isStatic={isTOCWidgetStatic} toggleStatic={() => toggleWidgetStatic(layout, \"a\")} />\r\n            </div>\r\n            <div key=\"b\">\r\n                <OrgWidget isStatic={isOrgWidgetStatic} toggleStatic={() => toggleWidgetStatic(layout, \"b\")} />\r\n            </div>\r\n            <div key=\"c\">\r\n                <NotificationWidget isStatic={isNotificationWidgetStatic} toggleStatic={() => toggleWidgetStatic(layout, \"c\")} />\r\n            </div>\r\n            <div key=\"d\">\r\n                <TrainingWidget isStatic={isTrainingWidgetStatic} toggleStatic={() => toggleWidgetStatic(layout, \"d\")} />\r\n            </div>\r\n        </GridLayout>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../css/react-big-calendar.css'\r\nimport { Card, CardContent, CardHeader, IconButton, Typography } from '@material-ui/core';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport TOCCustomToolbar from '../components/TOCCustomToolbar';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardRoot: {\r\n        height: '100%',\r\n        marginTop: '5px'\r\n    },\r\n    cardHeader: {\r\n        height: '10%'\r\n    },\r\n    cardContent: {\r\n        height: '90%'\r\n    },\r\n    title: {\r\n        textAlign: \"center\"\r\n    }\r\n}));\r\n\r\n\r\nexport default function TOCFullscreen() {\r\n    const classes = useStyles();\r\n    const [currentTime, setCurrentTime] = React.useState(moment().format('h:mm A'));\r\n    const [events, setEvents] = React.useState([]);\r\n\r\n    function GetEvents() {\r\n        fetch('./api/Dashboard/GetEvents')\r\n            .then(response => response.json())\r\n            .then(data => setEvents(data))\r\n            .then(setCurrentTime(moment().format('h:mm A')))\r\n    }\r\n\r\n    useEffect(() => {\r\n        //get events to populate calendar\r\n        GetEvents();\r\n    }, []);\r\n\r\n    let components = {\r\n        toolbar: TOCCustomToolbar\r\n    };\r\n\r\n    return (\r\n        <Card variant=\"outlined\" className={classes.cardRoot}>\r\n            <CardHeader\r\n                action={\r\n                    <IconButton area-label=\"sync\" onClick={GetEvents}>\r\n                        <SyncIcon />\r\n                        <Typography variant=\"caption\">As of<br />{currentTime}</Typography>\r\n                        <SyncIcon />\r\n                    </IconButton>\r\n                }\r\n                title={\r\n                    <Typography variant=\"h6\" className={classes.title}>Time Off Calendar</Typography>\r\n                }\r\n                className={classes.cardHeader}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <Calendar\r\n                    events={events}\r\n                    localizer={localizer}\r\n                    components={components}\r\n                />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DialogTitle, Dialog, DialogActions, DialogContent, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport OrganizationChart from \"@dabeng/react-orgchart\";\r\n\r\nconst ds = {\r\n    id: \"n1\", //userId\r\n    name: \"Tom Brown\", //fullname\r\n    title: \"general manager\", //org title\r\n    children: [ //members\r\n        { id: \"n2\", name: \"Lind Mill\", title: \"department manager\" },\r\n        {\r\n            id: \"n3\", name: \"Cindy Simms\", title: \"department manager\",\r\n            children: [\r\n                { id: \"n4\", name: \"Tia Sunny\", title: \"senior engineer\" },\r\n                {\r\n                    id: \"n5\", name: \"Kyle Kyleson\", title: \"senior engineer\",\r\n                    children: [\r\n                        { id: \"n6\", name: \"Dan Dan\", title: \"engineer\" },\r\n                        { id: \"n7\", name: \"Bob Bob\", title: \"engineer\" }\r\n                    ]\r\n                },\r\n                { id: \"n8\", name: \"Jeffer Jefferson\", title: \"senior engineer\" }\r\n            ]\r\n        },\r\n        { id: \"n9\", name: \"Billy Joel\", title: \"department manager\" },\r\n        {\r\n            id: \"n10\", name: \"Sarah Williams\", title: \"department manager\",\r\n            children: [\r\n                { id: \"n11\", name: \"Cristina\", title: \"senior engineer\" }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n    dialogPaper: {\r\n        width: \"70%\",\r\n        maxWidth: \"fit-content\"\r\n    }\r\n});\r\n\r\nexport default function OrgChartWidgetDialog(props) {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        //fetch call goes here\r\n    }, [props.isOpen]);\r\n\r\n    return (\r\n        <Dialog onClose={props.setClosed} aria-labelledby=\"simple-dialog-title\" open={props.isOpen} classes={{ paper: classes.dialogPaper }}>\r\n            <DialogTitle id=\"simple-dialog-title\">OrgName Here</DialogTitle>\r\n            <DialogContent>\r\n                <OrganizationChart datasource={ds} pan={true} zoom={true} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={props.setClosed}>Close</Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nOrgChartWidgetDialog.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n};","import React, { useEffect } from 'react';\r\nimport OrganizationChart from \"@dabeng/react-orgchart\";\r\nimport { Paper } from '@material-ui/core';\r\nimport OrgChartWidgetDialog from '../components/OrgChartWidgetDialog';\r\n\r\nexport default function OrgChartFullscreen(props) {\r\n\r\n    const [orgs, setOrgs] = React.useState(\r\n        {\r\n            id: \"\",\r\n            name: \"\",\r\n            children: []\r\n        }\r\n    );\r\n\r\n    function GetOrgs() {\r\n        fetch('./api/Dashboard/GetOrgs')\r\n            .then(response => response.json())\r\n            .then(data => setOrgs(data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        //get orgs to populate orgchart\r\n        GetOrgs();\r\n    }, [props.isStatic]);\r\n\r\n    const [isDialogOpen, setIsDialogOpen] = React.useState(false);\r\n    \r\n    //const ds = {\r\n    //    id: \"E4000\", \r\n    //    name: \"ASDF Org\", \r\n    //        children: [ \r\n    //        { id: \"E4100\", name: \"QWERTY Org\",\r\n    //                children: [\r\n    //                    { id: \"E4110\", name: \"ZXCV Org\"}\r\n    //                ]\r\n    //        },\r\n    //        { id: \"E4200\", name: \"YTREWQ Org\",\r\n    //            children: [\r\n    //                { id: \"E4210\", name: \"VBNM Org\" },\r\n    //                { id: \"E4220\", name: \"MNBV Org\" }\r\n    //            ]\r\n    //        }\r\n    //    ]\r\n    //};\r\n\r\n    const handleClickOpen = (e) => {\r\n        setIsDialogOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setIsDialogOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Paper style={{ height: \"90%\" }}>\r\n            <OrganizationChart datasource={orgs} pan={true} zoom={true} onClickNode={handleClickOpen}/>\r\n            <OrgChartWidgetDialog isOpen={isDialogOpen} setClosed={handleClose} />\r\n        </Paper>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Paper } from '@material-ui/core';\r\nimport SearchBar from \"material-ui-search-bar\";\r\n\r\nexport default function TrainingFullscreen() {\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 70 },\r\n        { field: 'courseCode', headerName: 'Course Code', width: 150 },\r\n        { field: 'courseTitle', headerName: 'Course Title', width: 250 },\r\n        { field: 'statusText', headerName: 'Status Text', width: 130 },\r\n        { field: 'courseDesc', headerName: 'Course Description', width: 300 },\r\n        { field: 'availDate', headerName: 'Available Date', width: 150 },\r\n        { field: 'content1', headerName: 'Content 1', width: 130 },\r\n        { field: 'content2', headerName: 'Content 2', width: 130 }\r\n    ];\r\n\r\n    const originalRows = [\r\n        { id: '1', courseCode: 'CSCI590', courseTitle: 'Capstone', statusText: 'Active', courseDesc: 'Applying accumulated knowledge', availDate: 'January 11 2021', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '2', courseCode: 'ITS315', courseTitle: 'Introduction to Networks', statusText: 'Active', courseDesc: 'Networking fundamentals', availDate: 'January 11 2021', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '3', courseCode: 'ITS350', courseTitle: 'Information Systems & Security', statusText: 'Active', courseDesc: 'Network security basics', availDate: 'January 11 2021', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '4', courseCode: 'CSCI515', courseTitle: 'Ethical Hacking', statusText: 'Inactive', courseDesc: 'Network penetration testing', availDate: 'March 15 2021', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '5', courseCode: 'ITS455', courseTitle: 'Digital Forensics & Investigations', statusText: 'Inactive', courseDesc: 'Digital forensics', availDate: 'March 15 2021', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '6', courseCode: 'BADM345', courseTitle: 'Business Communication', statusText: 'Archive', courseDesc: 'Communication for business', availDate: 'August 20 2020', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '7', courseCode: 'COMM190', courseTitle: 'Introduction to Communication', statusText: 'Archive', courseDesc: 'Communication basics', availDate: 'August 20 2020', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '8', courseCode: 'CSCI411', courseTitle: 'Operating Systems', statusText: 'Archive', courseDesc: 'Windows & Linux system modeling', availDate: 'August 20 2020', content1: 'asdf', content2: 'qwerty' },\r\n        { id: '9', courseCode: 'CSCI520', courseTitle: 'Database Systems Design', statusText: 'Archive', courseDesc: 'Intro to database concepts and SQL', availDate: 'August 20 2020', content1: 'asdf', content2: 'qwerty' },\r\n    ];\r\n\r\n    var a = useState(originalRows), rows = a[0], setRows = a[1];\r\n    var b = useState(\"\"), searched = b[0], setSearched = b[1];\r\n    var requestSearch = function (searchedVal) {\r\n        var filteredRowsCode = originalRows.filter(function (row) {\r\n            return row.courseCode.toLowerCase().includes(searchedVal.toLowerCase());\r\n        });\r\n        var filteredRowsTitle = originalRows.filter(function (row) {\r\n            return row.courseTitle.toLowerCase().includes(searchedVal.toLowerCase());\r\n        });\r\n        setRows([...new Set([...filteredRowsCode, ...filteredRowsTitle])]);\r\n    };\r\n    var cancelSearch = function () {\r\n        setSearched(\"\");\r\n        requestSearch(searched);\r\n    };\r\n\r\n    return (\r\n        <Paper style={{ marginTop: '5px', height: \"100%\" }}>\r\n            <SearchBar\r\n                value={searched}\r\n                onChange={(searchVal) => requestSearch(searchVal)}\r\n                onCancelSearch={() => cancelSearch()}\r\n            />\r\n            <DataGrid rows={rows} columns={columns} />\r\n        </Paper>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, ButtonGroup, Card, CardContent, CardHeader, IconButton, Snackbar, Tab, Tabs, Typography } from '@material-ui/core';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport moment from 'moment';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    alert: {\r\n        margin: '5px'\r\n    },\r\n    cardRoot: {\r\n        height: '100%',\r\n        marginTop: '5px'\r\n    },\r\n    cardHeader: {\r\n        height: '10%'\r\n    },\r\n    cardContent: {\r\n        height: '90%'\r\n    },\r\n    title: {\r\n        textAlign: \"center\"\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        display: 'flex',\r\n        height: '100%'\r\n    },\r\n    tabs: {\r\n        borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    message: {\r\n        padding: '8px 0',\r\n        width: \"100%\"\r\n    }\r\n}));\r\n\r\nexport default function NotificationFullscreen(props) {\r\n    const classes = useStyles();\r\n    const [currentTime, setCurrentTime] = React.useState();\r\n    const [notifications, setNotifications] = React.useState([]);\r\n\r\n    const [isSnackbarOpen, setIsSnackbarOpen] = React.useState(false);\r\n    const [snackbarText, setSnackbarText] = React.useState(\"\");\r\n    const [snackbarSeverity, setSnackbarSeverity] = React.useState(\"\");\r\n\r\n    //get notifciations fetch requests placed in function as it is called multiple times\r\n    function getNotifications() {\r\n        fetch('./api/Dashboard/GetNotifications')\r\n            .then(response => response.json())\r\n            .then(data => setNotifications(data.sort(function (a, b) {\r\n                //oldest at the top, newest at the bottom\r\n                return new Date(a.dateFired) - new Date(b.dateFired);\r\n            })))\r\n            .then(setCurrentTime(moment().format('h:mm A')))\r\n    }\r\n\r\n    useEffect(() => {\r\n        //get notifications to populate widget\r\n        getNotifications();\r\n\r\n        //set timer to refresh notifications\r\n    }, []);\r\n\r\n    const handleDismissal = (key) => {\r\n        //fetch request to change notification status to dismissed\r\n        console.log(window.location);\r\n        const url = new URL(window.location.origin + \"/api/Dashboard/SetDismissed\");\r\n        const params = { id: JSON.stringify(key) };\r\n        url.search = new URLSearchParams(params);\r\n        fetch(url)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    setSnackbarSeverity(\"success\");\r\n                    setSnackbarText(\"Notification dismissed!\");\r\n                    setIsSnackbarOpen(true);\r\n\r\n                    //retrieve latest notifications\r\n                    getNotifications();\r\n                }\r\n                else\r\n                    throw new Error(\"error\");\r\n            })\r\n            .catch(err => {\r\n                setSnackbarSeverity(\"error\");\r\n                setSnackbarText(\"Server Error... Please try again or refresh the widget\");\r\n                setIsSnackbarOpen(true);\r\n            })\r\n    }\r\n\r\n    //undo in this context means setting status of notification back to active\r\n    const handleUndo = (key) => {\r\n        //fetch request to change notification status to active\r\n        console.log(window.location);\r\n        const url = new URL(window.location.origin + \"/api/Dashboard/SetActive\");\r\n        const params = { id: JSON.stringify(key) };\r\n        url.search = new URLSearchParams(params);\r\n        fetch(url)\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    setSnackbarSeverity(\"info\");\r\n                    setSnackbarText(\"Notification re-activated!\");\r\n                    setIsSnackbarOpen(true);\r\n\r\n                    //retrieve latest notifications\r\n                    getNotifications();\r\n                }\r\n                else\r\n                    throw new Error(\"error\");\r\n            })\r\n            .catch(err => {\r\n                setSnackbarSeverity(\"error\");\r\n                setSnackbarText(\"Server Error... Please try again or refresh the widget\");\r\n                setIsSnackbarOpen(true);\r\n            })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setIsSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <Card variant=\"outlined\" className={classes.cardRoot}>\r\n            <CardHeader\r\n                avatar={\r\n                    <div></div>\r\n                }\r\n                action={\r\n                    <IconButton area-label=\"sync\" onClick={getNotifications}>\r\n                        <SyncIcon />\r\n                        <Typography variant=\"caption\">As of<br />{currentTime}</Typography>\r\n                        <SyncIcon />\r\n                    </IconButton>\r\n                }\r\n                title={\r\n                    <Typography variant=\"h4\" className={classes.title}>Notifications</Typography>\r\n                }\r\n                className={classes.cardHeader}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <VerticalTabs notifications={notifications} dismissNotification={handleDismissal} undoDismissal={handleUndo} />\r\n                <Snackbar open={isSnackbarOpen} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity={snackbarSeverity} variant=\"filled\">\r\n                        {snackbarText}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`vertical-tabpanel-${index}`}\r\n            aria-labelledby={`vertical-tab-${index}`}\r\n            style={{ width: \"100%\", overflowY: \"auto\" }}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `vertical-tab-${index}`,\r\n        'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nfunction AlertContent(props) {\r\n    return (\r\n        <div>\r\n            <p style={{ float: \"left\" }}>{props.text}</p>\r\n            <p style={{ float: \"right\" }}><i>{moment(props.dateFired).format('M/D/YY h:mm A')}</i></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction VerticalTabs(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n    }, [props.notifications]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleDismissal = (key) => {\r\n        props.dismissNotification(key);\r\n    }\r\n\r\n    const handleUndo = (key) => {\r\n        props.undoDismissal(key);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Tabs\r\n                orientation=\"vertical\"\r\n                variant=\"scrollable\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"Vertical tabs example\"\r\n                className={classes.tabs}\r\n            >\r\n                <Tab label=\"Overview\" {...a11yProps(0)} />\r\n                <Tab label=\"TOC Calendar\" {...a11yProps(1)} />\r\n                <Tab label=\"Custom\" {...a11yProps(2)} />\r\n                <Tab label=\"History\" {...a11yProps(3)} />\r\n            </Tabs>\r\n            <TabPanel value={value} index={0}>\r\n                {props.notifications.map((item) => {\r\n                    if (item.status !== \"dismissed\")\r\n                        return (\r\n                            <Alert\r\n                                action={\r\n                                    <IconButton\r\n                                        aria-label=\"close\"\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            handleDismissal(item.id);\r\n                                        }}\r\n                                    >\r\n                                        <CloseIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                }\r\n                                severity=\"info\" className={classes.alert} key={item.id} classes={{ message: classes.message }}>\r\n                                <AlertTitle>{item.title}</AlertTitle>\r\n                                <AlertContent text={item.text} dateFired={item.dateFired} />\r\n                            </Alert>\r\n                        );\r\n                })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                {props.notifications.map((item) => {\r\n                    if (item.category === \"toc\" && item.status !== \"dismissed\")\r\n                        return (\r\n                            <Alert\r\n                                action={\r\n                                    <IconButton\r\n                                        aria-label=\"close\"\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            handleDismissal(item.id);\r\n                                        }}\r\n                                    >\r\n                                        <CloseIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                }\r\n                                severity=\"info\" className={classes.alert} key={item.id} classes={{ message: classes.message }}>\r\n                                <AlertTitle>{item.title}</AlertTitle>\r\n                                <AlertContent text={item.text} dateFired={item.dateFired} />\r\n                            </Alert>\r\n                        );\r\n                })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                {props.notifications.map((item) => {\r\n                    if (item.category === \"custom\" && item.status !== \"dismissed\")\r\n                        return (\r\n                            <Alert\r\n                                action={\r\n                                    <IconButton\r\n                                        aria-label=\"close\"\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            handleDismissal(item.id);\r\n                                        }}\r\n                                    >\r\n                                        <CloseIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                }\r\n                                severity=\"info\" className={classes.alert} key={item.id} classes={{ message: classes.message }}>\r\n                                <AlertTitle>{item.title}</AlertTitle>\r\n                                <AlertContent text={item.text} dateFired={item.dateFired} />\r\n                            </Alert>\r\n                        );\r\n                })}\r\n            </TabPanel>\r\n            <TabPanel value={value} index={3}>\r\n                {props.notifications.map((item) => {\r\n                    if (item.status === \"dismissed\")\r\n                        return (\r\n                            <Alert\r\n                                action={\r\n                                    <IconButton\r\n                                        aria-label=\"close\"\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        onClick={() => {\r\n                                            handleUndo(item.id);\r\n                                        }}\r\n                                    >\r\n                                        <RedoIcon fontSize=\"inherit\" />\r\n                                    </IconButton>\r\n                                }\r\n                                severity=\"success\" className={classes.alert} key={item.id} classes={{ message: classes.message }}>\r\n                                <AlertTitle>{item.title}</AlertTitle>\r\n                                <AlertContent text={item.text} dateFired={item.dateFired} />\r\n                            </Alert>\r\n                        );\r\n                })}\r\n            </TabPanel>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport Layout from './components/Layout';\r\nimport Home from './pages/Home';\r\nimport TOCFullscreen from './pages/TOCFullscreen';\r\nimport OrgChartFullscreen from './pages/OrgChartFullscreen';\r\nimport TrainingFullscreen from './pages/TrainingFullscreen';\r\nimport NotificationFullscreen from './pages/NotificationFullscreen';\r\nimport './custom.css'\r\n\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Route exact path='/' component={Home} />\r\n                <Route exact path='/EOP' component={Home} />\r\n                <Route path='/EOP/TOCFullscreen' component={TOCFullscreen} />\r\n                <Route path='/EOP/OrgChartFullscreen' component={OrgChartFullscreen} />\r\n                <Route path='/EOP/TrainingFullscreen' component={TrainingFullscreen} />\r\n                <Route path='/EOP/NotificationFullscreen' component={NotificationFullscreen} />\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}