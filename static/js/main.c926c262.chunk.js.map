{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/TOCCustomToolbar.js","components/TOCWidget.js","components/OrgWidget.js","pages/Home.js","pages/FetchData.js","pages/Counter.js","components/TestGridComp.js","pages/TOCFullscreen.js","pages/OrgChartFullscreen.js","App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","NavMenu","props","classes","useEffect","darkState","AppBar","position","Toolbar","Switch","checked","onChange","changeTheme","Typography","variant","className","Button","NavLink","tag","Link","to","style","color","height","maxWidth","Layout","useState","setDarkState","palletType","darkTheme","createMuiTheme","palette","type","CssBaseline","Container","children","messages","date","time","event","allDay","week","work_week","day","month","previous","next","yesterday","tomorrow","today","agenda","noEventsInRange","showMore","total","TOCCustomToolbar","navigate","action","console","log","onNavigate","this","classNames","toolbar","ButtonGroup","onClick","toolBarLabel","label","viewNamesGroup","viewNames","views","view","length","map","name","key","clsx","bind","withStyles","toolBar","display","flexWrap","justifyContent","alignItems","marginBottom","padding","textAlign","localizer","momentLocalizer","moment","cardHeader","cardContent","TOCWidget","isStatic","MyEvents","id","start","Date","end","components","Card","CardHeader","avatar","FormControl","component","FormControlLabel","control","Checkbox","toggleStatic","labelPlacement","IconButton","area-label","window","location","href","CardContent","events","PanZoomChart","datasource","pan","zoom","WidthProvider","Responsive","Home","isTOCWidgetFrozen","setisTOCWidgetFrozen","isTOCWidgetDraggable","setIsTOCWidgetDraggable","isTOCWidgetResizable","setIsTOCWidgetResizable","isOrgWidgetFrozen","setisOrgWidgetFrozen","isOrgWidgetDraggable","setIsOrgWidgetDraggable","isOrgWidgetResizable","setIsOrgWidgetResizable","layoutS","i","x","y","w","h","minW","isDraggable","isResizable","setLayout","layout","cols","rowHeight","width","onLayoutChange","onMouseEnter","document","body","overflow","onMouseLeave","FetchData","state","forecasts","loading","populateWeatherData","contents","renderForecastsTable","fetch","response","json","data","setState","aria-labelledby","forecast","temperatureC","temperatureF","summary","Component","displayName","Counter","currentCount","incrementCounter","aria-live","TestGridComp","static","maxW","backgroundColor","TOCFullscreen","Paper","OrgChartFullscreen","App","margin","exact","path","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c926c262.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function NavMenu(props) {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        //console.log(props.darkState);\r\n    }, [props.darkState]);\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Switch\r\n                    checked={props.darkState}\r\n                    onChange={props.changeTheme}\r\n                />\r\n                <Typography variant=\"h6\" className={classes.title}>\r\n                    Employee Oversight Portal\r\n                </Typography>\r\n                <Button >\r\n                    <NavLink tag={Link} to=\"/EOP\"><Typography variant=\"body1\" style={{color: \"white\"}}>Home</Typography></NavLink>\r\n                </Button>\r\n                <Button color=\"inherit\">\r\n                    <NavLink tag={Link} to=\"/EOP/gridComp\"><Typography variant=\"body1\" style={{ color: \"white\" }}>Test Grid Component</Typography></NavLink>\r\n                </Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport NavMenu from './NavMenu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: \"800px\",\r\n        maxWidth: \"1600px\"\r\n    }\r\n}));\r\n\r\nexport default function Layout(props) {\r\n\r\n    const [darkState, setDarkState] = useState(false);\r\n    const palletType = darkState ? \"dark\" : \"light\";\r\n\r\n    const classes = useStyles();\r\n\r\n    const darkTheme = createMuiTheme({\r\n        palette: {\r\n            type: palletType,\r\n        }\r\n    });\r\n\r\n    const handleThemeChange = () => {\r\n        setDarkState(!darkState);\r\n    };\r\n\r\n    return (\r\n        <MuiThemeProvider theme={darkTheme}>\r\n            <CssBaseline />\r\n            <NavMenu darkState={darkState} changeTheme={handleThemeChange}/>\r\n            <Container className={classes.root}>\r\n                {props.children}\r\n            </Container>\r\n        </MuiThemeProvider>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Toolbar from 'react-big-calendar/lib/Toolbar';\r\nimport { AppBar, Button, ButtonGroup, Toolbar as MUIToolbar, Typography } from '@material-ui/core';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nlet messages = {\r\n    date: 'Date',\r\n    time: 'Time',\r\n    event: 'Event',\r\n    allDay: 'All Day',\r\n    week: 'Week',\r\n    work_week: 'Work Week',\r\n    day: 'Day',\r\n    month: 'Month',\r\n    previous: 'Back',\r\n    next: 'Next',\r\n    yesterday: 'Yesterday',\r\n    tomorrow: 'Tomorrow',\r\n    today: 'Today',\r\n    agenda: 'Agenda',\r\n\r\n    noEventsInRange: 'There are no events in this range.',\r\n\r\n    showMore: total => `+${total} more`,\r\n}\r\n\r\nconst styles = theme => ({\r\n    toolBar: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginBottom: \"10px\"\r\n    },\r\n    toolBarLabel: {\r\n        flexGrow: 1,\r\n        padding: \"0 10px\",\r\n        textAlign: \"center\"\r\n    }\r\n});\r\n\r\nclass TOCCustomToolbar extends Toolbar {\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <AppBar position=\"static\">\r\n                <MUIToolbar classNames={classes.toolbar}>\r\n                    <ButtonGroup>\r\n                        <Button type=\"button\" onClick={() => this.navigate('TODAY')} >\r\n                            <Typography variant=\"subtitle1\" style={{ color: \"white\" }}>\r\n                                Today\r\n                            </Typography>\r\n                        </Button>\r\n                        <Button type=\"button\" onClick={() => this.navigate('PREV')}>\r\n                            <Typography variant=\"subtitle1\" style={{ color: \"white\" }}>\r\n                                Prev\r\n                            </Typography>\r\n                        </Button>\r\n                        <Button type=\"button\" onClick={() => this.navigate('NEXT')}>\r\n                            <Typography variant=\"subtitle1\" style={{ color: \"white\" }}>\r\n                                Next\r\n                            </Typography>\r\n                        </Button>\r\n                    </ButtonGroup>\r\n                    <Typography className={classes.toolBarLabel}>{this.props.label}</Typography>\r\n                    <ButtonGroup className=\"rbc-btn-group\">{this.viewNamesGroup(messages)}</ButtonGroup>\r\n                 </MUIToolbar>\r\n            </AppBar>\r\n        );\r\n    }\r\n\r\n    viewNamesGroup(messages) {\r\n        let viewNames = this.props.views\r\n        const view = this.props.view\r\n\r\n        if (viewNames.length > 1) {\r\n            return viewNames.map(name => (\r\n                <Button\r\n                    type=\"button\"\r\n                    key={name}\r\n                    className={clsx({ 'rbc-active': view === name })}\r\n                    onClick={this.view.bind(null, name)}\r\n                >\r\n                    <Typography variant=\"subtitle1\" style={{ color: \"white\" }}>\r\n                        {messages[name]}\r\n                    </Typography>\r\n                </Button>\r\n            ))\r\n        }\r\n    }\r\n\r\n    navigate = action => {\r\n        console.log(action);\r\n\r\n        this.props.onNavigate(action)\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(TOCCustomToolbar);","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, Checkbox, FormControl, FormControlLabel, IconButton, Tab, Tabs, Toolbar, Typography } from '@material-ui/core';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport '../css/react-big-calendar.css'\r\nimport TOCCustomToolbar from './TOCCustomToolbar';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: \"100%\"\r\n    },\r\n    cardHeader: {\r\n        height: \"15%\"\r\n    },\r\n    cardContent: {\r\n        height: \"85%\"\r\n    }\r\n}));\r\n\r\nexport default function TOCWidget(props) {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        //console.log(props.isStatic)\r\n    }, [props.isStatic]);\r\n\r\n    const MyEvents = [\r\n        {\r\n            id: 0,\r\n            title: 'All Day Event very long title',\r\n            allDay: true,\r\n            start: new Date(2021, 1, 23),\r\n            end: new Date(2021, 1, 24),\r\n        }\r\n    ];\r\n\r\n    const handleNavClick = () => {\r\n        window.location.href = \"/EOP/TOCFullscreen\";\r\n    }\r\n\r\n    let components = {\r\n        toolbar: TOCCustomToolbar\r\n    };\r\n\r\n    return (\r\n        <Card variant=\"outlined\" className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={props.isStatic}\r\n                                    onChange={props.toggleStatic}\r\n                                />\r\n                            }\r\n                            label=\"locked:\"\r\n                            labelPlacement=\"start\"\r\n                        />\r\n                    </FormControl>\r\n                }\r\n                action={\r\n                    <IconButton area-label=\"fullscreen\" onClick={handleNavClick}>\r\n                        <FullscreenIcon />\r\n                    </IconButton>\r\n                }\r\n                className={classes.cardHeader}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <Calendar\r\n                    events={MyEvents}\r\n                    localizer={localizer}\r\n                    components={components}\r\n                />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport OrganizationChart from \"@dabeng/react-orgchart\";\r\nimport { Card, CardContent, CardHeader, Checkbox, FormControl, FormControlLabel, IconButton} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: \"100%\"\r\n    },\r\n    cardHeader: {\r\n        height: \"15%\"\r\n    },\r\n    cardContent: {\r\n        height: \"85%\"\r\n    }\r\n}));\r\n\r\nexport default function PanZoomChart(props){\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        //console.log(props.isStatic)\r\n    }, [props.isStatic]);\r\n\r\n    const handleNavClick = () => {\r\n        //window.open(\"/OrgChartFullscreen\");\r\n        window.location.href = \"/EOP/OrgChartFullscreen\";\r\n    }\r\n\r\n    const ds = {\r\n        id: \"n1\",\r\n        name: \"Lao Lao\",\r\n        title: \"general manager\",\r\n        children: [\r\n            { id: \"n2\", name: \"Bo Miao\", title: \"department manager\" },\r\n            {\r\n                id: \"n3\",\r\n                name: \"Su Miao\",\r\n                title: \"department manager\",\r\n                children: [\r\n                    { id: \"n4\", name: \"Tie Hua\", title: \"senior engineer\" },\r\n                    {\r\n                        id: \"n5\",\r\n                        name: \"Hei Hei\",\r\n                        title: \"senior engineer\",\r\n                        children: [\r\n                            { id: \"n6\", name: \"Dan Dan\", title: \"engineer\" },\r\n                            { id: \"n7\", name: \"Xiang Xiang\", title: \"engineer\" }\r\n                        ]\r\n                    },\r\n                    { id: \"n8\", name: \"Pang Pang\", title: \"senior engineer\" }\r\n                ]\r\n            },\r\n            { id: \"n9\", name: \"Hong Miao\", title: \"department manager\" },\r\n            {\r\n                id: \"n10\",\r\n                name: \"Chun Miao\",\r\n                title: \"department manager\",\r\n                children: [{ id: \"n11\", name: \"Yue Yue\", title: \"senior engineer\" }]\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <Card variant=\"outlined\" className={classes.root}>\r\n            <CardHeader\r\n                avatar={\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={props.isStatic}\r\n                                    onChange={props.toggleStatic}\r\n                                />\r\n                            }\r\n                            label=\"locked:\"\r\n                            labelPlacement=\"start\"\r\n                        />\r\n                    </FormControl>\r\n                }\r\n                action={\r\n                    <IconButton area-label=\"fullscreen\" onClick={handleNavClick}>\r\n                        <FullscreenIcon />\r\n                    </IconButton>\r\n                }\r\n                className={classes.cardHeader}\r\n            />\r\n            <CardContent className={classes.cardContent}>\r\n                <OrganizationChart datasource={ds} pan={true} zoom={true} />\r\n            </CardContent>\r\n\r\n\r\n        </Card>\r\n    );\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport GridLayout from 'react-grid-layout';\r\nimport { Responsive, WidthProvider } from 'react-grid-layout';\r\nimport TOCWidget from '../components/TOCWidget';\r\nimport OrgWidget from '../components/OrgWidget';\r\nimport \"../css/styles.css\";\r\n\r\nconst ResponsiveGridLayout = WidthProvider(Responsive);\r\n\r\nexport default function Home() {\r\n\r\n    const [isTOCWidgetFrozen, setisTOCWidgetFrozen] = useState(true);\r\n    const [isTOCWidgetDraggable, setIsTOCWidgetDraggable] = useState(false);\r\n    const [isTOCWidgetResizable, setIsTOCWidgetResizable] = useState(false);\r\n\r\n    const [isOrgWidgetFrozen, setisOrgWidgetFrozen] = useState(true);\r\n    const [isOrgWidgetDraggable, setIsOrgWidgetDraggable] = useState(false);\r\n    const [isOrgWidgetResizable, setIsOrgWidgetResizable] = useState(false);\r\n\r\n    //remove the minW, isDraggable etc. to allow dynamic state use\r\n    const layoutS = [\r\n        { i: 'a', x: 0, y: 0, w: 8, h: 14, minW: 8, isDraggable: isTOCWidgetDraggable, isResizable: isTOCWidgetResizable },\r\n        { i: 'b', x: 8, y: 0, w: 8, h: 14, minW: 8, isDraggable: isOrgWidgetDraggable, isResizable: isOrgWidgetResizable }\r\n    ];\r\n\r\n    const [layout, setLayout] = useState(layoutS);\r\n\r\n    const handleTOCWidgetFreeze = () => {\r\n        setisTOCWidgetFrozen(!isTOCWidgetFrozen);\r\n        setIsTOCWidgetDraggable(!isTOCWidgetDraggable);\r\n        setIsTOCWidgetResizable(!isTOCWidgetResizable);\r\n    }\r\n\r\n    const handleOrgWidgetFreeze = () => {\r\n        setisOrgWidgetFrozen(!isOrgWidgetFrozen);\r\n        setIsOrgWidgetDraggable(!isOrgWidgetDraggable);\r\n        setIsOrgWidgetResizable(!isOrgWidgetResizable);\r\n    }\r\n\r\n    const handleOrgChartEnter = () => {\r\n        document.body.style.overflow = \"hidden\";\r\n        //obj[0].style.margin = \"auto 17px auto 17px\"; //size of the scrollbar in each browser\r\n    }\r\n\r\n    const handleOrgChartLeave = () => {\r\n        document.body.style.overflow = \"auto\";\r\n        //obj[0].style.margin = \"auto\";\r\n    }\r\n\r\n    function onLayoutChange(layout) {\r\n        console.log(\"layout change\");\r\n        setLayout(layout);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <GridLayout className=\"layout\" layout={layoutS} cols={16} rowHeight={30} width={1600} onLayoutChange={onLayoutChange}>\r\n            <div key=\"a\">\r\n                <TOCWidget isStatic={isTOCWidgetFrozen} toggleStatic={handleTOCWidgetFreeze}/>\r\n            </div>\r\n            <div key=\"b\" onMouseEnter={handleOrgChartEnter} onMouseLeave={handleOrgChartLeave}>\r\n                <OrgWidget isStatic={isOrgWidgetFrozen} toggleStatic={handleOrgWidgetFreeze} />\r\n            </div>\r\n        </GridLayout>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import GridLayout from 'react-grid-layout';\r\nimport React, { Component } from 'react';\r\nimport \"../css/styles.css\";\r\n\r\nexport class TestGridComp extends Component {\r\n    render() {\r\n        // layout is an array of objects, see the demo for more complete usage\r\n        const layout = [\r\n            { i: 'a', x: 0, y: 0, w: 1, h: 2, static: true },\r\n            { i: 'b', x: 1, y: 0, w: 3, h: 2, minW: 2, maxW: 4 },\r\n            { i: 'c', x: 1, y: 2, w: 1, h: 2 }\r\n        ];\r\n        return (\r\n            <GridLayout className=\"layout\" layout={layout} cols={12} rowHeight={30} width={1200}>\r\n                <div style={{backgroundColor: 'blue'}} key=\"a\">a</div>\r\n                <div style={{ backgroundColor: 'black' }} key=\"b\">b</div>\r\n                <div style={{ backgroundColor: 'red' }} key=\"c\">c</div>\r\n            </GridLayout>\r\n        )\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport '../css/react-big-calendar.css'\r\nimport { Paper } from '@material-ui/core';\r\nimport TOCCustomToolbar from '../components/TOCCustomToolbar';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport default function TOCFullscreen() {\r\n\r\n    const MyEvents = [\r\n        {\r\n            id: 0,\r\n            title: 'All Day Event very long title',\r\n            allDay: true,\r\n            start: new Date(2021, 1, 23),\r\n            end: new Date(2021, 1, 24),\r\n        }\r\n    ];\r\n\r\n    let components = {\r\n        toolbar: TOCCustomToolbar\r\n    };\r\n\r\n    return (\r\n        <Paper style={{ height: \"100%\" }}>\r\n            <Calendar\r\n                events={MyEvents}\r\n                localizer={localizer}\r\n                components={components}\r\n            />\r\n        </Paper>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport OrganizationChart from \"@dabeng/react-orgchart\";\r\nimport { Paper } from '@material-ui/core';\r\n\r\nexport default function OrgChartFullscreen() {\r\n\r\n    const ds = {\r\n        id: \"n1\",\r\n        name: \"Lao Lao\",\r\n        title: \"general manager\",\r\n        children: [\r\n            { id: \"n2\", name: \"Bo Miao\", title: \"department manager\" },\r\n            {\r\n                id: \"n3\",\r\n                name: \"Su Miao\",\r\n                title: \"department manager\",\r\n                children: [\r\n                    { id: \"n4\", name: \"Tie Hua\", title: \"senior engineer\" },\r\n                    {\r\n                        id: \"n5\",\r\n                        name: \"Hei Hei\",\r\n                        title: \"senior engineer\",\r\n                        children: [\r\n                            { id: \"n6\", name: \"Dan Dan\", title: \"engineer\" },\r\n                            { id: \"n7\", name: \"Xiang Xiang\", title: \"engineer\" }\r\n                        ]\r\n                    },\r\n                    { id: \"n8\", name: \"Pang Pang\", title: \"senior engineer\" }\r\n                ]\r\n            },\r\n            { id: \"n9\", name: \"Hong Miao\", title: \"department manager\" },\r\n            {\r\n                id: \"n10\",\r\n                name: \"Chun Miao\",\r\n                title: \"department manager\",\r\n                children: [{ id: \"n11\", name: \"Yue Yue\", title: \"senior engineer\" }]\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <Paper style={{ height: \"90%\" }}>\r\n            <OrganizationChart datasource={ds} pan={true} zoom={true} />\r\n        </Paper>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport Layout from './components/Layout';\r\nimport Home from './pages/Home';\r\nimport { FetchData } from './pages/FetchData';\r\nimport { Counter } from './pages/Counter';\r\nimport { TestGridComp } from './components/TestGridComp';\r\nimport TOCFullscreen from './pages/TOCFullscreen';\r\nimport OrgChartFullscreen from './pages/OrgChartFullscreen';\r\nimport './custom.css'\r\n\r\n\r\nexport default class App extends Component {\r\n    static displayName = App.name;\r\n\r\n    componentWillMount() {\r\n        document.body.style.margin = \"auto 17px auto 17px\";\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.style.margin = \"auto\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Route exact path='/' component={Home} />\r\n                <Route exact path='/EOP' component={Home} />\r\n                <Route path='/EOP/gridComp' component={TestGridComp} />\r\n                <Route path='/EOP/TOCFullscreen' component={TOCFullscreen} />\r\n                <Route path='/EOP/OrgChartFullscreen' component={OrgChartFullscreen} />\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}